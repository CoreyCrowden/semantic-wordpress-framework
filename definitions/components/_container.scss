//
// Container
//
// Containers are used as wrappers and give control to the formatting of the site.

// ------------------------------------------------------------------------------------------------------------------

// Container Padding
$container-padding                      : 1.2em !default;

// These are multipliers of the default value
$container-padding-collapsing-mobile    : .6 !default;
$container-padding-collapsing-tablet    : .8 !default;

$container-padding-light                : $container-padding * .5 !default;
$container-padding-heavy                : $container-padding * 2 !default;
$container-padding-very-heavy           : $container-padding * 3 !default;



$container-relaxed-padding-mobile      : $container-padding * 2 !default;
$container-relaxed-padding             : $container-padding * 3 !default;

// ------------------------------------------------------------------------------------------------------------------

// Container
//
// The container is a basic class for wrapping and controlling other elements

.container {
  // Container defaults
  width: 100%;
  max-width: $container-max-width;
  padding: 0;
  overflow: auto;

  // Left align container in parent container
  &.left {
    float: left;
  }

  // Center align container in parent container
  &.centered {
    /* Positioning */
    margin-left: auto;
    margin-right: auto;
  }

  // Right align container in parent container
  &.right {
    float: right;
  }
}

// ------------------------------------------------------------------------------------------------------------------

// Fixed & absolute items

.fixed {
  position: fixed;
}
.absolute {
  position: absolute;
}
.fixed,
.absolute {
  z-index: 99999999;
  @extend .animate;

  // Align fixed container to top edge of browser
  .top {
    top: 0;
    @include admin-bar-adjustment(top);
  }

  // Align fixed container to right edge of browser
  .right {
    right: 0;
  }

  // Align fixed container to bottom edge of browser
  .bottom {
    bottom: 0;
  }

  // Align fixed container to left edge of browser
  .left {
    left: 0;
  }
}


// ------------------------------------------------------------------------------------------------------------------

// Padding, Content & Relaxed Padding
//
// These are classes used to create spacing around elements.
// .content only provides horizontal padding by default

// Gives the element padding to create formatting.
.padded,
.content {

  // Default padding
  padding: $container-padding;
  > .fluid {
    margin: -$container-padding;
  }

  &.lightly {
    padding: $container-padding-light;
    > .fluid {
      margin: -$container-padding-light;
    }
  }

  &.heavy {
    padding: $container-padding-heavy;
    > .fluid {
      margin: -$container-padding-heavy;
    }
  }

  &.very.heavy {
    padding: $container-padding-very-heavy;
    > .fluid {
      margin: -$container-padding-very-heavy;
    }
  }

  // Offset for default padding
  > .fluid {
    &.horizontally {
      margin-top: 0;
      margin-bottom: 0;
    }
    &.vertically {
      margin-left: 0;
      margin-right: 0;
    }
  }

  &.collapsing {
    @include media('<=tablet-lrg') {
      // Default padding
      padding: $container-padding * $container-padding-collapsing-tablet;
      > .fluid {
        margin: -$container-padding * $container-padding-collapsing-tablet;
      }

      &.lightly {
        padding: $container-padding-light * $container-padding-collapsing-tablet;
        > .fluid {
          margin: -$container-padding-light * $container-padding-collapsing-tablet;
        }
      }

      &.heavy {
        padding: $container-padding-heavy * $container-padding-collapsing-tablet;
        > .fluid {
          margin: -$container-padding-heavy * $container-padding-collapsing-tablet;
        }
      }

      &.very.heavy {
        padding: $container-padding-very-heavy * $container-padding-collapsing-tablet;
        > .fluid {
          margin: -$container-padding-very-heavy * $container-padding-collapsing-tablet;
        }
      }
    }

    @include media('<=mobile-lrg') {
      // Default padding
      padding: $container-padding * $container-padding-collapsing-mobile;
      > .fluid {
        margin: -$container-padding * $container-padding-collapsing-mobile;
      }

      &.lightly {
        padding: $container-padding-light * $container-padding-collapsing-mobile;
        > .fluid {
          margin: -$container-padding-light * $container-padding-collapsing-mobile;
        }
      }

      &.heavy {
        padding: $container-padding-heavy * $container-padding-collapsing-mobile;
        > .fluid {
          margin: -$container-padding-heavy * $container-padding-collapsing-mobile;
        }
      }

      &.very.heavy {
        padding: $container-padding-very-heavy * $container-padding-collapsing-mobile;
        > .fluid {
          margin: -$container-padding-very-heavy * $container-padding-collapsing-mobile;
        }
      }
    }
  }


}

// Padding manipulation classes
.padded.horizontally {
  // Default padding
  padding-top: 0;
  padding-bottom: 0;

  // Offset for default padding
  > .fluid {
    margin-top: 0;
    margin-bottom: 0;
  }
}

.padded.vertically {
  // Default padding
  padding-right: 0;
  padding-left: 0;

  // Offset for default padding
  > .fluid {
    margin-right: 0;
    margin-left: 0;
  }
}

// ------------------------------------------------------------------------------------------------------------------

// Fluid container
//
// Spans the full width of the parent container. This is setup to offset
// parent container padding. Using an additional class of top or bottom
// will also offset top and bottom margins accordingly.
//
// The offset margins can be found with the corresponding container type.
// e.g. the offset for content padding is with the .content class styles.

.fluid {
  min-width: 100%;
  width: auto;
  max-width: none;
}

// ------------------------------------------------------------------------------------------------------------------


// Content
//
// Apply the class .content directly around text to apply a padding
// around the text.

.content,
.content.relaxed {
  // Standard Content
  width: auto;
  min-width: 0; // ! Important, This forces container width in flex grid

  padding-top: 0;
  padding-bottom: 0;

  // Adjust for .fluid content
  .fluid {
    margin-top: 0;
    margin-bottom: 0;
  }
}
