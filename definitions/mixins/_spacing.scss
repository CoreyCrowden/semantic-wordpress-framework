//----------------------------------------------------------------------

// Spacing Mixins For Applying Padding & Margin To Elements

//----------------------------------------------------------------------

// Padding Mixins, Refer to variable $unit for calculations
@mixin padding($padding-top: 1, $padding-right: null, $padding-bottom: null, $padding-left: null){

  // Check for values and calculate if they exist
  @if($padding-top){
    $padding-top: $padding-top * $unit;
  }
  @if($padding-right){
    $padding-right: $padding-right * $unit;
  }
  @if($padding-bottom){
    $padding-bottom: $padding-bottom * $unit;
  }
  @if($padding-left){
    $padding-left: $padding-left * $unit;
  }

  padding: $padding-top $padding-right $padding-bottom $padding-left;

}

// Individual Padding

@mixin padding-top($padding: 1){
  padding-top: $padding * $unit;
}
@mixin padding-right($padding: 1){
  padding-right: $padding * $unit;
}
@mixin padding-bottom($padding: 1){
  padding-bottom: $padding * $unit;
}
@mixin padding-left($padding: 1){
  padding-left: $padding * $unit;
}

//----------------------------------------------------------------------

// Margin Mixins, Refer to variable $unit for calculations
@mixin margin($margin-top: 1, $margin-right: null, $margin-bottom: null, $margin-left: null){

  // Check for values and calculate if they exist
  @if($margin-top){
    $margin-top: $margin-top * $unit;
  }
  @if($margin-right){
    $margin-right: $margin-right * $unit;
  }
  @if($margin-bottom){
    $margin-bottom: $margin-bottom * $unit;
  }
  @if($margin-left){
    $margin-left: $margin-left * $unit;
  }

  // Output the margins
  margin: $margin-top $margin-right $margin-bottom $margin-left;

}

// Individual Margins
@mixin margin-top($margin: 1){
  margin-top: $margin * $unit;
}
@mixin margin-right($margin: 1){
  margin-right: $margin * $unit;
}
@mixin margin-bottom($margin: 1){
  margin-bottom: $margin * $unit;
}
@mixin margin-left($margin: 1){
  margin-left: $margin * $unit;
}

//----------------------------------------------------------------------

// Margin Auto
@mixin margin-auto(){
  margin-left: auto;
  margin-right: auto;
}

//----------------------------------------------------------------------

// Fluid Content Mixin | This applies a negative margin to meet parent containers edge
@mixin fluid($margin-top, $margin-right, $margin-bottom, $margin-left){

  //* Apply left and right margins
  @include margin-right(-$margin-right);
  @include margin-left(-$margin-left);

  //* Apply top margin for first child (Child at top of container)
  &.before {
    @include margin-top( -$margin-top );
  }

  //* Apply top margin for last child (Child at bottom of container)
  &.after {
    @include margin-bottom( -$margin-bottom );
  }
}

//----------------------------------------------------------------------

// Individual Positions
@mixin top($top: 1){
  top: $top * $unit;
}
@mixin right($right: 1){
  right: $right * $unit;
}
@mixin bottom($bottom: 1){
  bottom: $bottom * $unit;
}
@mixin left($left: 1){
  left: $left * $unit;
}


